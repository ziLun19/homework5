{"version":3,"sources":["ToDoAddForm.js","ToDoList.js","ToDoTitle.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoAddForm","todoRef","React","createRef","addItemOnList","e","preventDefault","todoItem","todo","current","value","isCompleted","props","addToDoItems","currentTarget","reset","id","onSubmit","this","type","name","ref","required","Component","TodoList","handleChange","event","updateTodo","todoItems","console","log","updateTodos","index","toggleCheckbox","checked","className","onChange","onClick","removeToDoItem","headerStyle","textAlign","padding","ToDoTitle","style","App","state","item","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","ToDoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad056c07.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ToDoAddForm extends React.Component { \r\n  todoRef = React.createRef();\r\n\r\n  addItemOnList = e => {\r\n    e.preventDefault();\r\n    const todoItem = {\r\n      todo: this.todoRef.current.value,\r\n      isCompleted: false\r\n    };\r\n    this.props.addToDoItems(todoItem);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\r\n        <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\r\n        <button>Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ToDoAddForm;","import React from 'react';\r\nclass TodoList extends React.Component {\r\n  handleChange = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    console.log(event.currentTarget.value);\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  toggleCheckbox = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.checked\r\n    };\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isCompleted\"\r\n          checked={this.props.todoItems.isCompleted}\r\n          onChange={this.toggleCheckbox}\r\n          // checked={this.props.todoItems.isChecked}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          value={this.props.todoItems.todo}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* <button>Edit</button> */}\r\n        <button\r\n          className=\"del-btn\"\r\n          onClick={() => this.props.removeToDoItem(this.props.index)}\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default TodoList;","import React from 'react';\r\n\r\nfunction ToDoTitle() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>CGU Todo list</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\nexport default ToDoTitle;","import './App.css';\nimport React, { Component } from \"react\";\nimport ToDoAddForm from \"./ToDoAddForm\";\nimport ToDoList from \"./ToDoList\";\nimport ToDoTitle from \"./ToDoTitle\"\nclass App extends Component {\n  state = {\n    todoItems: {}\n  };\n\n  addToDoItems = item => {\n    const items = { ...this.state.todoItems };\n    console.log(items);\n    items[`item${Date.now()}`] = item;\n    this.setState({\n      todoItems: items\n    });\n  };\n\n  removeToDoItem = item => {\n    const todos = { ...this.state.todoItems };\n    delete todos[item];\n    this.setState({ todoItems: todos });\n  };\n\n  updateTodos = (key, updatedTodo) => {\n    const todos = { ...this.state.todoItems };\n    todos[key] = updatedTodo;\n    this.setState({ todoItems: todos });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ToDoTitle/>\n        <ToDoAddForm addToDoItems={this.addToDoItems} />\n        <ul>\n          {Object.keys(this.state.todoItems).map(key => (\n            <ToDoList\n              key={key}\n              index={key}\n              todoItems={this.state.todoItems[key]}\n              removeToDoItem={this.removeToDoItem}\n              updateTodos={this.updateTodos}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<React.StrictMode>\n<App />,\n</React.StrictMode>,\ndocument.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}